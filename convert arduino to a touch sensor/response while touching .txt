#define THRES 100
#define SAMPLES 20

#define OUTPUT_PIN 10  // Buzzer pin
#define INPUT_PIN A1  // Pin for capacitive touch sensing

typedef struct touchPad {
  int pin;
  int unpValue;
  int value;
  char state = 0, prevState = 0;
};

touchPad touchPad1;

void setup() {
  /* Set A0 pull-up resistor, used to charge internal capacitor */
  pinMode(INPUT_PIN, INPUT_PULLUP);
  analogRead(INPUT_PIN);

  pinMode(OUTPUT_PIN, OUTPUT);
  digitalWrite(OUTPUT_PIN, LOW);

  /* Initialize sensor */
  touchPadInit(&touchPad1, INPUT_PIN);
}

void loop() {
  /* Scan sensor */
  touchPadScan(&touchPad1);

  /* Control output based on touch sensing */
  if (touchPad1.state == 1) {
    digitalWrite(OUTPUT_PIN, HIGH); // Set output high when touch is detected
  } else {
    digitalWrite(OUTPUT_PIN, LOW); // Set output low otherwise
  }

  delay(10);
}

void touchPadInit(touchPad *pad, int pin) {
  pad->pin = pin;
  pad->unpValue = (sampleB(pin) - sampleA(pin));
  DIDR0 |= 1;
  DIDR0 |= 1 << (pin - A0);
}

int sampleA(int sensePin) {
  /* Sample capacitor is charged to VCC
   * via A0 pull-up resistor, touch pad
   * is discharged by pulling pin low
   */
  ADMUX = 0b01000000;
  pinMode(sensePin, OUTPUT);
  digitalWrite(sensePin, LOW);

  pinMode(sensePin, INPUT);
  ADMUX = 0b01000000 | sensePin - A0;

  ADCSRA |= 1 << ADSC;
  while ((ADCSRA & (1 << ADSC)) != 0);

  return ADC;
}

int sampleB(int sensePin) {
  /* Sample capacitor is discharged by selecting
   * GND as ADC input, touch pad is charged to VCC
   * via pin pull-up resistor
   */
  ADMUX = 0b01001111;
  pinMode(sensePin, INPUT_PULLUP);

  pinMode(sensePin, INPUT);
  ADMUX = 0b01000000 | sensePin - A0;

  ADCSRA |= 1 << ADSC;
  while ((ADCSRA & (1 << ADSC)) != 0);

  return ADC;
}

void touchPadScan(touchPad *pad) {
  static float A, B;

  A = 0;
  B = 0;

  /* Get some readings from sensor and calculate average */
  for (int i = 0; i < SAMPLES; i++) {
    A += sampleA(pad->pin);
    B += sampleB(pad->pin);
  }

  A /= SAMPLES;
  B /= SAMPLES;

  pad->value = (B - A);

  /* Member unpValue is a running average of the unpressed readings.
   * A sudden change in sensor reading is interpreted as a touch
   */
  if (pad->value > (pad->unpValue + THRES))
    pad->state = 1;
  else {
    pad->state = 0;
    pad->unpValue = ((float)pad->unpValue * 0.9) + ((float)pad->value * 0.1);
  }
}
